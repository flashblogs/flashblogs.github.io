<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>羅生門的博客</title>
  
  <subtitle>纵使困顿难行，亦当砥砺奋进</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ishow.coding.me/"/>
  <updated>2018-07-31T08:02:24.687Z</updated>
  <id>https://ishow.coding.me/</id>
  
  <author>
    <name>惕卐羅生門</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>再见，2016！你好，2017！ 2.2</title>
    <link href="https://ishow.coding.me/2017/02/02/hello-2017.html"/>
    <id>https://ishow.coding.me/2017/02/02/hello-2017.html</id>
    <published>2017-02-02T02:04:56.000Z</published>
    <updated>2018-07-31T08:02:24.687Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2017 —— 丁酉年，鸡年；五行属山下火命，独立之鸡，是火鸡之命</p></blockquote><h2 id="2016说说这年的工作，一把辛酸泪"><a href="#2016说说这年的工作，一把辛酸泪" class="headerlink" title="2016说说这年的工作，一把辛酸泪"></a>2016说说这年的工作，一把辛酸泪</h2><p>刚刚过去的猴年，是收获颇丰的一年，也是比较尴尬的一年。QAQ</p><p>作为团队的leader，上半年满腔热血为了新项目和兄弟们夜以继日的艰苦奋战，从最开始的调研阶段，到研发上架，再到最后的运营推广，<br>总算不负众望，拿出了一个完整的产品-APP。</p><p>在整个产品的研发周期中，学会了很多，也再次领略到了个中艰辛，这里面有来自外部的压力，也有来自团队内部的冲突。<br>所幸，公司上层大力支持，这也是能走到最后的根本吧。</p><p>公司也拿着这个APP，去谈了好几个比较大的地产项目（谈成了项目，不一定表示项目款到位，这也是后半年最蛋疼的一点），<br>当公司上下都摩拳擦掌，准备大展手脚的时候，危机突然而至！</p><p>悲剧发生在运营推广了1个月左右的时候。由于市场部门业务回款问题，导致资金链断裂，而刚刚稍有起色的运营推广，也被迫中止。<br>项目无奈处于维护状态，不再对外大肆宣传推广。原以为这种情况仅仅是暂时的，谁知，过了2个多月依然毫无起色，甚至有恶化的迹象。<br>随着团队的核心技术人员，相继离开，整个公司氛围降至冰点。公司每天也都在为各样的事而扯皮、苟延残喘。</p><p>到了2016年底，公司的战略也已经大幅变化，全公司的工作都空前一致：<strong>回款</strong></p><p>说来挺搞笑，公司的在外业务款几百万，应付公司日常每个月10多万的开销还捉襟见肘，这种窘境直到年底依然没有得到改观；<br>项目初期展望的年终奖也成为泡影咯。</p><h2 id="初中同学会-腊月初四"><a href="#初中同学会-腊月初四" class="headerlink" title="初中同学会 腊月初四"></a>初中同学会 腊月初四</h2><p><strong>“没事参加同学会<br>拆散一对是一对”</strong></p><p>玩笑段子，还是相信同学间的“纯真感情”，没有外面现实社会中的那么多龌蹉……至少要少的多吧</p><p>2017新年感到特别特别感觉高兴的是，时隔12年，初中的一帮同窗再次聚首，<br>除了刚见面的时候有点拘谨外，在简单寒暄后，谈到往日种种很快大家也都热烈起来。<br>没有一点刻意、做作、应酬的感觉。</p><p>或谈论往昔同窗趣事；或谈论工作；或谈论爱情；或谈论孩子……<br>感觉大家都长大了，成熟了，但是又感觉还是以前读书时期的那个TA</p><p>下午陪着同桌死党看了一场电影《大闹天竺》，虽然我明知道是烂片，但是心情非常好，<br>因为她的兴致比较高，据她说，这几年被家庭孩子所累，都没有时间进电影院了，想想真是一个悲伤的故事。</p><p>仔细回想，这还是第一次和她一起看电影，电影剧情讲的什么已经忘记了，期间，一直在想读书时候她的各种2的情况，<br>想到有趣处，禁不住笑出了声，真是一个美好的下午！</p><p>可惜，中途有事，提前离场了，说好了，欠她一场电影，记得下次再补上。</p><p>同学会的高潮，随着班主任老沈和美女唐老师的到来达到了高潮。汗，想想当时我们班在全校来说都是淘出了名的，<br>到来的两位老师，当时着实付出了蛮多心血（可以这么说，现在的老师的职业态度以及情感投入远不及当时我们的老师）。</p><p>老沈，人逢喜事精神爽，格外的意气风发；唐老师，漂亮依旧风采照人，在与会同学们的建(起)议(哄)下，载歌载舞!<br>真心感谢两位授业恩师！</p><p> 《<a href="/2017/02/01/miss-tang-saying.html">聚会有感</a>》 <em>-via 唐老师</em> </p><blockquote><p>  同学聚会<br>  悠悠往事已经年，爱恨情仇如云烟；<br>  同窗三载金兰事，江湖夜雨化樽前。</p></blockquote><h2 id="你好，2017"><a href="#你好，2017" class="headerlink" title="你好，2017"></a>你好，2017</h2><p><strong>如果你有梦想的话，就要去捍卫它。那些一事无成的人想告诉你你也成不了大器。如果你有理想的话，就要去努力实现。就这样。<br>你要尽全力保护你的梦想。那些嘲笑你梦想的人，因为他们必定会失败，他们想把你变成和他们一样的人。我坚信，只要我心中有梦想，<br>我就会与众不同，你也是。</strong> <em>-via 泪目的《当幸福来敲门》</em></p>]]></content>
    
    <summary type="html">
    
      记录生活点滴，成长之路！！！
    
    </summary>
    
      <category term="生活" scheme="https://ishow.coding.me/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="https://ishow.coding.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="同学会" scheme="https://ishow.coding.me/tags/%E5%90%8C%E5%AD%A6%E4%BC%9A/"/>
    
      <category term="过年" scheme="https://ishow.coding.me/tags/%E8%BF%87%E5%B9%B4/"/>
    
  </entry>
  
  <entry>
    <title>唐老师于同学会有感 2.1</title>
    <link href="https://ishow.coding.me/2017/02/01/miss-tang-saying.html"/>
    <id>https://ishow.coding.me/2017/02/01/miss-tang-saying.html</id>
    <published>2017-02-01T08:44:45.000Z</published>
    <updated>2018-07-31T07:16:45.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="致“0504同学们”"><a href="#致“0504同学们”" class="headerlink" title="致“0504同学们”"></a>致“0504同学们”</h2><p><strong>2005级4班的同学们新年好！</strong></p><p> 在此我给同学们拜个年！祝愿同学们在新年里好梦甜甜，好运连连！</p><p> 由于同学们聚会那天，师生相见，我的心情非常激动，有好多话想给同学们说说，可不知从何说起，</p><p> 幸好现在通讯发达，有QQ、微信、电话等可随时互动，看到你们个个充满青春活力又各有成就，我感到无比欣慰。</p><p> 这是同学们离开街子初中的第一次聚会，并未因同学们筹备的时间仓促而影响效果。</p><p> 聚会时你们善解人意的话语，激情的主持、动听的歌声时刻在我耳边回荡；</p><p> 对老师的尊重，对同学的热情等鲜活的画面时时在我脑海里浮现。聚会时的一些细节让我倍感温馨，深受感动。</p><p> 你们幽默的话语营造出一种轻松愉悦的氛围，这是我参加多次学生聚会的难有的感受！</p><p> 十二个春夏秋冬，弹指一挥间，看到在座的你们个个意气风发，神采奕奕。</p><p> 大家历经了成长、成人、成才的过程，已没有少年的懵懂冲动，多了几分成熟睿智。</p><p>同学们的岗位不同，环境不同，受到的磨练也不一样，</p><p>但都有一个共同点，那便是成功！</p><p>衷心希望同学们在各自的岗位上，开拓进取，奋发有为，取得更大的成功！</p><p>这次聚会，恍惚又回到当年的时光，不论是欢笑还是泪水，都是我们珍贵的回忆，</p><p>回想起与你们相处的三年里，当年年轻气盛的我有很多事情处理得有些不当，诚恳的请同学们谅解！</p><p>重温师生情谊，思绪万千，感慨无限，所有的话语都包含在相逢一笑的握手中，</p><p>在举杯一碰的愉悦中，我们洒下的是欢声笑语，收获的是真诚的友谊，放飞的是未来希望，</p><p>尽管各种原因，我们来去匆匆，但还是情深意浓。</p><p>有一点小小的遗憾是，有一些同学还没有来得及赶上这次聚会，</p><p>希望我的祝福能跨越时空：<strong>祝愿同学们携手共创幸福美好的人生！</strong></p><p>—— END. Echo on 2.1  (<em><a href="/2017/02/02/hello-2017.html"> 再见，2016！你好，2017！ </a></em>)</p>]]></content>
    
    <summary type="html">
    
      纵使困顿难行，亦当砥砺奋进!
    
    </summary>
    
      <category term="生活" scheme="https://ishow.coding.me/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="同学会" scheme="https://ishow.coding.me/tags/%E5%90%8C%E5%AD%A6%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>Git的一些练习总结:-)</title>
    <link href="https://ishow.coding.me/2017/01/17/git-test.html"/>
    <id>https://ishow.coding.me/2017/01/17/git-test.html</id>
    <published>2017-01-17T03:44:25.000Z</published>
    <updated>2018-07-31T07:16:45.688Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.mukewang.com/55fb826f00017e2d06030263.jpg" alt="git版本控制"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5119519&auto=0&height=66"></iframe><h2 id="容易混淆的提示-windows下面"><a href="#容易混淆的提示-windows下面" class="headerlink" title="容易混淆的提示(windows下面)"></a>容易混淆的提示(windows下面)</h2><blockquote><ol><li>Clone、Pull一个远程Git库，不需要密码</li><li>Push是需要密码的</li><li>可以通过配置，Push 到多个远程Git代码托管平台</li><li>同一台电脑，只能保留一个Git平台的帐号密码 ( <em>也就是说你可以同时push到 <code>github</code> 、 <code>oschina</code> 、<code>coding</code> ,但是，你不能同时push到两个 <code>github</code>的库…</em> )</li><li>当你push的时候，如果当前设备没有保存你push的托管平台帐号密码，会提示你输入正确的 <code>登录名</code> 和 <code>密码</code></li><li>如果刚push了代码到 <code>url:github1</code>,切换到另外一个项目，想push代码到 <code>url:github2</code>,这个时候，<br>你得通过 <strong>控制面板 -&gt; 用户 -&gt; 凭据管理器 -&gt; 普通凭据</strong> 找到已经保存的 <code>url:github1</code> 凭据并删除，再次push <code>url:github2</code> 将会提示你重新输入 帐号密码<br>(<em>如果不切换账户密码，<code>push</code>会失败，提示403，库不存在、没授权 等信息</em>)</li></ol></blockquote><h2 id="Git同时提交多个远程代码托管平台"><a href="#Git同时提交多个远程代码托管平台" class="headerlink" title="Git同时提交多个远程代码托管平台"></a>Git同时提交多个远程代码托管平台</h2><ul><li>push 一个远程库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;url&gt;</span><br></pre></td></tr></table></figure><ul><li>push 多个远程库</li></ul><ol><li>增加第一个地址</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;url1&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>增加第二个……第N个地址</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url --add origin &lt;url2&gt;</span><br><span class="line">……</span><br><span class="line">git remote set-url --add origin &lt;urlN&gt;</span><br></pre></td></tr></table></figure><p><em>重复向同一个远程仓库名字添加需要 <code>set-url --origin</code> 参数。 <code>origin</code> 远程库</em></p><ol start="3"><li>一次push到多个库</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="git-push-到多个远程库分析"><a href="#git-push-到多个远程库分析" class="headerlink" title="git push 到多个远程库分析"></a>git push 到多个远程库分析</h3><ul><li>分析配置文件</li></ul><p>你每执行一次git remote set-url –add origin 就会增加一行，</p><p>在操作完上面的添加命令后，如果我们打开.git/config文件,我们可以看到这样的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">url = &lt;url1&gt;</span><br><span class="line">fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">url =&lt;url2&gt;</span><br><span class="line">[branch &quot;master&quot;]</span><br><span class="line">remote = origin</span><br><span class="line">merge = refs/heads/master</span><br></pre></td></tr></table></figure><p>使用git push origin master时，你可以push到origin的多个url地址，<br>但是使用 git pull时，只能拉取origin里的一个url地址(即fetch-url)，这个fetch-url默认为 你添加的到origin的第一个地址 <code>&lt;url1&gt;</code>，<br>如果你想更改，只需要更改config文件里，那几个url的顺序即可，fetch-url会直接对应排行第一的那个url连接。</p><ul><li>手动修改 <code>.git config</code> 文件</li></ul><p>如上，我们不一定非要用 <code>git 命令</code> 去执行添加多个url，也可以直接打开config，手动修改、添加 url 来操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">url = &lt;url1&gt;</span><br><span class="line">fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">url =&lt;url2&gt;</span><br><span class="line">    url =&lt;url……N&gt;</span><br><span class="line">[branch &quot;master&quot;]</span><br><span class="line">remote = origin</span><br><span class="line">merge = refs/heads/master</span><br></pre></td></tr></table></figure><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p><img src="http://static.oschina.net/uploads/img/201412/07180843_cbKA.jpg" alt="Git常用命令速查"></p><blockquote><p>先大概写这么些吧，以后慢慢再补充</p><footer><strong>段水流</strong><cite>大师兄</cite></footer></blockquote><p>THE END.</p>]]></content>
    
    <summary type="html">
    
      记录生活点滴，成长之路
    
    </summary>
    
      <category term="编程" scheme="https://ishow.coding.me/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Git" scheme="https://ishow.coding.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo初体验</title>
    <link href="https://ishow.coding.me/2017/01/05/hello-hexo.html"/>
    <id>https://ishow.coding.me/2017/01/05/hello-hexo.html</id>
    <published>2017-01-05T09:03:44.000Z</published>
    <updated>2018-07-31T09:40:36.235Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blog/img/hexo.png" alt="hexo与github更配哦"></p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>此文主要记录本人在Hexo体验中的关键操作，如：指令、注意的地方，并非完整文档。（完整文档将在文末提出）</p><h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><ul><li>Node.js</li></ul><p>用以安装、编译Hexo项目，生产静态化站点</p><ul><li>Git</li></ul><p>项目版本控制，以及Hexo项目、主题代码更新升级。 <strong>安装 Git Bash Here 命令行工具</strong></p><ul><li>GitHub</li></ul><p>注册帐号，代码托管平台，以及博客部署的 GitHub Pages 站点空间</p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><h3 id="首次安装"><a href="#首次安装" class="headerlink" title="首次安装"></a>首次安装</h3><ul><li>安装Hexo</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><ul><li>初始化Hexo项目</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><ul><li>安装项目依赖和插件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><ul><li>启动服务器本地预览（默认地址：<code>http://localhost:4000</code>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="主题-amp-文章"><a href="#主题-amp-文章" class="headerlink" title="主题&amp;文章"></a>主题&amp;文章</h3><ul><li>下载主题，复制到Hexo项目的 <code>themes</code> 文件夹</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/wuchong/jacman.git themes/jacman</span><br></pre></td></tr></table></figure><p><em>下载完主题，如果要启用该主题，需要修改 项目 目录下的 <code>_config.yml</code> 文件中的 <code>themes</code> 属性值，对应上面 就是 <code>jacman</code></em></p><ul><li>更新主题</li></ul><blockquote><p>1.在已有主题git下面直接 <code>pull</code> 最新版本  2. <code>clone</code> 最新版本主题，然后再 <code>copy</code> 到 <code>themes\jacman</code> </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/jacman</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p><em>1.先切换到要更新的主题下面 2.备份原来主题目录下的 <code>_config.yml</code> 3.pull最新版本主题</em></p><ul><li>写一篇文章</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p><em>[layout] 缺省时默认是post，如：<code>hexo new &quot;My New Post&quot;</code></em></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ul><li>生成静态化</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><em>生成的文件，将全部在 根目录下的 <code>public</code> 文件夹</em></p><ul><li>启动服务器本地预览（默认地址：<code>http://localhost:4000</code>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line"></span><br><span class="line">hexo s -p 4001</span><br></pre></td></tr></table></figure><p><em>多个站点的时候，需要配置不同的服务器端口</em></p><ul><li>发布到Git空间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><em>本地查看无误后，将生成的文件发布到Git等平台。<strong>这个需要安装 <code>deploy</code> 插件，以及配置根目录下 <code>_config.yml</code> 文件</strong></em></p><h3 id="推荐插件"><a href="#推荐插件" class="headerlink" title="推荐插件"></a>推荐插件</h3><ul><li>项目静态页面部署到GitHub、GitCafe等</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>生成RSS订阅</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p><em>依然要配置 根目录下 <code>_config.yml</code> 的 <code>feed</code> 属性</em></p><ul><li>生成SEO用的站点地图</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p><em>依然要配置 根目录下 <code>_config.yml</code> 的 <code>sitemap</code> 属性</em></p><h1 id="安装已有Hexo博客"><a href="#安装已有Hexo博客" class="headerlink" title="安装已有Hexo博客"></a>安装已有Hexo博客</h1><blockquote><p>这个有一些坑</p></blockquote><ul><li>下载源代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/flashblogs/backupBlogs blogs</span><br></pre></td></tr></table></figure><ul><li>安装Hexo</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><ul><li>安装Hexo依赖、插件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p><em>当我尝试直接用 <code>npm install hexo -save</code> 的时候，好像某一些依赖并不能安装上，导致后面使用 <code>hexo g</code> 生成项目的时候，不能静态化 <code>.html</code></em></p><h1 id="本博客备注"><a href="#本博客备注" class="headerlink" title="本博客备注"></a>本博客备注</h1><blockquote><p>coding.me:361042070  github:1961221938 七牛云:1120213119</p></blockquote><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.github.com/" target="_blank" rel="noopener">GitHub</a></p><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方中文文档</a></p><p><a href="http://www.isetsuna.com/categories/Hexo/" target="_blank" rel="noopener">民间教程</a></p><p>End.  二〇一七年一月五日</p>]]></content>
    
    <summary type="html">
    
      记录生活点滴，成长之路
    
    </summary>
    
      <category term="编程" scheme="https://ishow.coding.me/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="https://ishow.coding.me/tags/Hexo/"/>
    
  </entry>
  
</feed>
