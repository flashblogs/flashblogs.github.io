[{"title":"再见，2016！你好，2017！ 2.2","date":"2017-02-02T02:04:56.000Z","path":"2017/02/02/hello-2017.html","text":"2017 —— 丁酉年，鸡年；五行属山下火命，独立之鸡，是火鸡之命 2016说说这年的工作，一把辛酸泪刚刚过去的猴年，是收获颇丰的一年，也是比较尴尬的一年。QAQ 作为团队的leader，上半年满腔热血为了新项目和兄弟们夜以继日的艰苦奋战，从最开始的调研阶段，到研发上架，再到最后的运营推广，总算不负众望，拿出了一个完整的产品-APP。 在整个产品的研发周期中，学会了很多，也再次领略到了个中艰辛，这里面有来自外部的压力，也有来自团队内部的冲突。所幸，公司上层大力支持，这也是能走到最后的根本吧。 公司也拿着这个APP，去谈了好几个比较大的地产项目（谈成了项目，不一定表示项目款到位，这也是后半年最蛋疼的一点），当公司上下都摩拳擦掌，准备大展手脚的时候，危机突然而至！ 悲剧发生在运营推广了1个月左右的时候。由于市场部门业务回款问题，导致资金链断裂，而刚刚稍有起色的运营推广，也被迫中止。项目无奈处于维护状态，不再对外大肆宣传推广。原以为这种情况仅仅是暂时的，谁知，过了2个多月依然毫无起色，甚至有恶化的迹象。随着团队的核心技术人员，相继离开，整个公司氛围降至冰点。公司每天也都在为各样的事而扯皮、苟延残喘。 到了2016年底，公司的战略也已经大幅变化，全公司的工作都空前一致：回款 说来挺搞笑，公司的在外业务款几百万，应付公司日常每个月10多万的开销还捉襟见肘，这种窘境直到年底依然没有得到改观；项目初期展望的年终奖也成为泡影咯。 初中同学会 腊月初四“没事参加同学会拆散一对是一对” 玩笑段子，还是相信同学间的“纯真感情”，没有外面现实社会中的那么多龌蹉……至少要少的多吧 2017新年感到特别特别感觉高兴的是，时隔12年，初中的一帮同窗再次聚首，除了刚见面的时候有点拘谨外，在简单寒暄后，谈到往日种种很快大家也都热烈起来。没有一点刻意、做作、应酬的感觉。 或谈论往昔同窗趣事；或谈论工作；或谈论爱情；或谈论孩子……感觉大家都长大了，成熟了，但是又感觉还是以前读书时期的那个TA 下午陪着同桌死党看了一场电影《大闹天竺》，虽然我明知道是烂片，但是心情非常好，因为她的兴致比较高，据她说，这几年被家庭孩子所累，都没有时间进电影院了，想想真是一个悲伤的故事。 仔细回想，这还是第一次和她一起看电影，电影剧情讲的什么已经忘记了，期间，一直在想读书时候她的各种2的情况，想到有趣处，禁不住笑出了声，真是一个美好的下午！ 可惜，中途有事，提前离场了，说好了，欠她一场电影，记得下次再补上。 同学会的高潮，随着班主任老沈和美女唐老师的到来达到了高潮。汗，想想当时我们班在全校来说都是淘出了名的，到来的两位老师，当时着实付出了蛮多心血（可以这么说，现在的老师的职业态度以及情感投入远不及当时我们的老师）。 老沈，人逢喜事精神爽，格外的意气风发；唐老师，漂亮依旧风采照人，在与会同学们的建(起)议(哄)下，载歌载舞!真心感谢两位授业恩师！ 《聚会有感》 -via 唐老师 同学聚会 悠悠往事已经年，爱恨情仇如云烟； 同窗三载金兰事，江湖夜雨化樽前。 你好，2017如果你有梦想的话，就要去捍卫它。那些一事无成的人想告诉你你也成不了大器。如果你有理想的话，就要去努力实现。就这样。你要尽全力保护你的梦想。那些嘲笑你梦想的人，因为他们必定会失败，他们想把你变成和他们一样的人。我坚信，只要我心中有梦想，我就会与众不同，你也是。 -via 泪目的《当幸福来敲门》","tags":[{"name":"生活","slug":"生活","permalink":"https://ishow.coding.me/tags/生活/"},{"name":"同学会","slug":"同学会","permalink":"https://ishow.coding.me/tags/同学会/"},{"name":"过年","slug":"过年","permalink":"https://ishow.coding.me/tags/过年/"}]},{"title":"唐老师于同学会有感 2.1","date":"2017-02-01T08:44:45.000Z","path":"2017/02/01/miss-tang-saying.html","text":"致“0504同学们”2005级4班的同学们新年好！ 在此我给同学们拜个年！祝愿同学们在新年里好梦甜甜，好运连连！ 由于同学们聚会那天，师生相见，我的心情非常激动，有好多话想给同学们说说，可不知从何说起， 幸好现在通讯发达，有QQ、微信、电话等可随时互动，看到你们个个充满青春活力又各有成就，我感到无比欣慰。 这是同学们离开街子初中的第一次聚会，并未因同学们筹备的时间仓促而影响效果。 聚会时你们善解人意的话语，激情的主持、动听的歌声时刻在我耳边回荡； 对老师的尊重，对同学的热情等鲜活的画面时时在我脑海里浮现。聚会时的一些细节让我倍感温馨，深受感动。 你们幽默的话语营造出一种轻松愉悦的氛围，这是我参加多次学生聚会的难有的感受！ 十二个春夏秋冬，弹指一挥间，看到在座的你们个个意气风发，神采奕奕。 大家历经了成长、成人、成才的过程，已没有少年的懵懂冲动，多了几分成熟睿智。 同学们的岗位不同，环境不同，受到的磨练也不一样， 但都有一个共同点，那便是成功！ 衷心希望同学们在各自的岗位上，开拓进取，奋发有为，取得更大的成功！ 这次聚会，恍惚又回到当年的时光，不论是欢笑还是泪水，都是我们珍贵的回忆， 回想起与你们相处的三年里，当年年轻气盛的我有很多事情处理得有些不当，诚恳的请同学们谅解！ 重温师生情谊，思绪万千，感慨无限，所有的话语都包含在相逢一笑的握手中， 在举杯一碰的愉悦中，我们洒下的是欢声笑语，收获的是真诚的友谊，放飞的是未来希望， 尽管各种原因，我们来去匆匆，但还是情深意浓。 有一点小小的遗憾是，有一些同学还没有来得及赶上这次聚会， 希望我的祝福能跨越时空：祝愿同学们携手共创幸福美好的人生！ —— END. Echo on 2.1 ( 再见，2016！你好，2017！ )","tags":[{"name":"同学会","slug":"同学会","permalink":"https://ishow.coding.me/tags/同学会/"}]},{"title":"Git的一些练习总结:-)","date":"2017-01-17T03:44:25.000Z","path":"2017/01/17/git-test.html","text":"容易混淆的提示(windows下面) Clone、Pull一个远程Git库，不需要密码 Push是需要密码的 可以通过配置，Push 到多个远程Git代码托管平台 同一台电脑，只能保留一个Git平台的帐号密码 ( 也就是说你可以同时push到 github 、 oschina 、coding ,但是，你不能同时push到两个 github的库… ) 当你push的时候，如果当前设备没有保存你push的托管平台帐号密码，会提示你输入正确的 登录名 和 密码 如果刚push了代码到 url:github1,切换到另外一个项目，想push代码到 url:github2,这个时候，你得通过 控制面板 -&gt; 用户 -&gt; 凭据管理器 -&gt; 普通凭据 找到已经保存的 url:github1 凭据并删除，再次push url:github2 将会提示你重新输入 帐号密码(如果不切换账户密码，push会失败，提示403，库不存在、没授权 等信息) Git同时提交多个远程代码托管平台 push 一个远程库 1git remote add origin &lt;url&gt; push 多个远程库 增加第一个地址 1git remote add origin &lt;url1&gt; 增加第二个……第N个地址 123git remote set-url --add origin &lt;url2&gt;……git remote set-url --add origin &lt;urlN&gt; 重复向同一个远程仓库名字添加需要 set-url --origin 参数。 origin 远程库 一次push到多个库 1git push origin master git push 到多个远程库分析 分析配置文件 你每执行一次git remote set-url –add origin 就会增加一行， 在操作完上面的添加命令后，如果我们打开.git/config文件,我们可以看到这样的配置: 1234567[remote &quot;origin&quot;] url = &lt;url1&gt; fetch = +refs/heads/*:refs/remotes/origin/* url =&lt;url2&gt;[branch &quot;master&quot;] remote = origin merge = refs/heads/master 使用git push origin master时，你可以push到origin的多个url地址，但是使用 git pull时，只能拉取origin里的一个url地址(即fetch-url)，这个fetch-url默认为 你添加的到origin的第一个地址 &lt;url1&gt;，如果你想更改，只需要更改config文件里，那几个url的顺序即可，fetch-url会直接对应排行第一的那个url连接。 手动修改 .git config 文件 如上，我们不一定非要用 git 命令 去执行添加多个url，也可以直接打开config，手动修改、添加 url 来操作： 12345678[remote &quot;origin&quot;] url = &lt;url1&gt; fetch = +refs/heads/*:refs/remotes/origin/* url =&lt;url2&gt; url =&lt;url……N&gt;[branch &quot;master&quot;] remote = origin merge = refs/heads/master 附 先大概写这么些吧，以后慢慢再补充 段水流大师兄 THE END.","tags":[{"name":"Git","slug":"Git","permalink":"https://ishow.coding.me/tags/Git/"}]},{"title":"Hexo初体验","date":"2017-01-05T09:03:44.000Z","path":"2017/01/05/hello-hexo.html","text":"说明此文主要记录本人在Hexo体验中的关键操作，如：指令、注意的地方，并非完整文档。（完整文档将在文末提出） 环境要求 Node.js 用以安装、编译Hexo项目，生产静态化站点 Git 项目版本控制，以及Hexo项目、主题代码更新升级。 安装 Git Bash Here 命令行工具 GitHub 注册帐号，代码托管平台，以及博客部署的 GitHub Pages 站点空间 常用指令首次安装 安装Hexo 1npm install hexo-cli -g 初始化Hexo项目 1hexo init 安装项目依赖和插件 1npm install 启动服务器本地预览（默认地址：http://localhost:4000） 1hexo s 主题&amp;文章 下载主题，复制到Hexo项目的 themes 文件夹 1git clone https://github.com/wuchong/jacman.git themes/jacman 下载完主题，如果要启用该主题，需要修改 项目 目录下的 _config.yml 文件中的 themes 属性值，对应上面 就是 jacman 更新主题 1.在已有主题git下面直接 pull 最新版本 2. clone 最新版本主题，然后再 copy 到 themes\\jacman 12cd themes/jacmangit pull origin master 1.先切换到要更新的主题下面 2.备份原来主题目录下的 _config.yml 3.pull最新版本主题 写一篇文章 1hexo new [layout] &lt;title&gt; [layout] 缺省时默认是post，如：hexo new &quot;My New Post&quot; 部署 生成静态化 1hexo g 生成的文件，将全部在 根目录下的 public 文件夹 启动服务器本地预览（默认地址：http://localhost:4000） 123hexo shexo s -p 4001 多个站点的时候，需要配置不同的服务器端口 发布到Git空间 1hexo d 本地查看无误后，将生成的文件发布到Git等平台。这个需要安装 deploy 插件，以及配置根目录下 _config.yml 文件 推荐插件 项目静态页面部署到GitHub、GitCafe等 1npm install hexo-deployer-git --save 生成RSS订阅 1npm install hexo-generator-feed --save 依然要配置 根目录下 _config.yml 的 feed 属性 生成SEO用的站点地图 1npm install hexo-generator-sitemap --save 依然要配置 根目录下 _config.yml 的 sitemap 属性 安装已有Hexo博客 这个有一些坑 下载源代码 1git clone https://github.com/flashblogs/backupBlogs blogs 安装Hexo 1npm install hexo-cli -g 安装Hexo依赖、插件 1npm install 当我尝试直接用 npm install hexo -save 的时候，好像某一些依赖并不能安装上，导致后面使用 hexo g 生成项目的时候，不能静态化 .html 本博客备注 coding.me:361042070 github:1961221938 七牛云:1120213119 参考链接GitHub Hexo官方中文文档 民间教程 End. 二〇一七年一月五日","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://ishow.coding.me/tags/Hexo/"}]}]